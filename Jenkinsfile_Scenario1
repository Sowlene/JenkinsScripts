pipeline {
  agent any
  stages {
    stage('Welcome') {
      steps {
        parallel(
          "Welcome": {
            echo 'Here we GO !'
            
          },
          "Situation": {
            sh 'pwd && who && ls -Shal #l not pass'
            
          }
        )
      }
    }
    stage('Build') {
      steps {
        parallel(
          "Autorisations": {
            sh 'ls -lhS /var/run/ | grep docker.sock'
            echo 'Si un message concernant les permissions apparait faites un chmod 770 de ce fichier'
            
          },
          "Build Docker_DEV": {
            sh 'rm -Rf docker_tracim && git clone https://github.com/tracim/docker_tracim.git && cp Commit_after.txt docker_tracim/Debian_Test/ && cd docker_tracim/Debian_Test/ && cat Commit_after.txt && IDCOMMIT=$(cat /var/lib/jenkins/workspace/scenario1/docker_tracim/Debian_Test/Commit_after.txt) && sed -i "s/git checkout develop/git checkout $IDCOMMIT/" /var/lib/jenkins/workspace/scenario1/docker_tracim/Debian_Test/Dockerfile && docker build -t algoo/tracim_testing:latest .'
            
          }
        )
      }
    }
    stage('Run') {
      steps {
        parallel(
          "Run_DEV": {
            sh 'cd docker_tracim/Debian_Test/ && ls -lh && cat entrypoint.sh'
            
          },
          "Postgresql_DEV": {
            echo 'Run with Postgresql'
            sh 'cd docker_tracim/Debian_Test/ && docker run -e TEST_DATABASE_ENGINE=postgresql algoo/tracim_testing:latest'
            
          },
          "Mysql_DEV": {
            echo 'Run with Mysql'
            sh 'cd docker_tracim/Debian_Test// && docker run -e TEST_DATABASE_ENGINE=mysql algoo/tracim_testing:latest'
            
          },
          "Sqlite_DEV": {
            echo 'Run with PSqlite'
            sh 'cd docker_tracim/Debian_Test/ && docker run -e TEST_DATABASE_ENGINE=sqlite algoo/tracim_testing:latest'
            
          }
        )
      }
    }
    stage('TO DO') {
      steps {
        echo 'You had to push algoo/tracim_testing:latest on docker hub'
      }
    }
  }
}
